MIME-Version: 1.0
Date: Sat, 30 Sep 2023 11:53:56 +0530
Message-ID: <CAKBf-+QEHbEZ=hWH4s-hfspHg5J0X5Pja3X=jiavWf3RvzBfig@mail.gmail.com>
Subject: TestgradeJava
From: Renuga D <d.renuga007@gmail.com>
To: Renuga D <d.renuga007@gmail.com>
Content-Type: multipart/alternative; boundary="000000000000a92b9506068dad01"

--000000000000a92b9506068dad01
Content-Type: text/plain; charset="UTF-8"

package testgrade.java;
        import java.util.Scanner;

public class TestgradeJava{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Array to store student IDs and grades
        String[] studentIDs = {"001", "002", "003", "004", "005", "006",
"007", "008", "009", "010"};
        char[] studentGrades = new char[studentIDs.length];

        for (int i = 0; i < studentIDs.length; i++) {
            System.out.print("Enter test letter grade for student " +
studentIDs[i] + ": ");
            char grade = scanner.next().toUpperCase().charAt(0);

            try {
                validateGrade(grade); // Check if the grade is valid
                studentGrades[i] = grade;
            } catch (gradeexception e) {
                System.out.println("Invalid grade entered for student " +
studentIDs[i] + ". Setting grade to 'I'.");
                studentGrades[i] = 'I';
            }
        }

        scanner.close();

        System.out.println("\nStudent IDs and Grades:");
        for (int i = 0; i < studentIDs.length; i++) {
            System.out.println("Student ID: " + studentIDs[i] + ", Grade: "
+ studentGrades[i]);
        }
    }

    public static void validateGrade(char grade) throws gradeexception {
        for (char validGrade : gradeexception.VALID_GRADES) {
            if (grade == validGrade) {
                return; // Grade is valid, no exception
            }
        }
        throw new gradeexception("Invalid grade: " + grade);
    }
}

--000000000000a92b9506068dad01
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">package testgrade.java;<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 imp=
ort java.util.Scanner;<br><br>public class TestgradeJava{<br>=C2=A0 =C2=A0 =
public static void main(String[] args) {<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 Sca=
nner scanner =3D new Scanner(System.in);<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 <br=
>=C2=A0 =C2=A0 =C2=A0 =C2=A0 // Array to store student IDs and grades<br>=
=C2=A0 =C2=A0 =C2=A0 =C2=A0 String[] studentIDs =3D {&quot;001&quot;, &quot=
;002&quot;, &quot;003&quot;, &quot;004&quot;, &quot;005&quot;, &quot;006&qu=
ot;, &quot;007&quot;, &quot;008&quot;, &quot;009&quot;, &quot;010&quot;};<b=
r>=C2=A0 =C2=A0 =C2=A0 =C2=A0 char[] studentGrades =3D new char[studentIDs.=
length];<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 <br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 for=
 (int i =3D 0; i &lt; studentIDs.length; i++) {<br>=C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 System.out.print(&quot;Enter test letter grade for studen=
t &quot; + studentIDs[i] + &quot;: &quot;);<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 char grade =3D scanner.next().toUpperCase().charAt(0);<br>=C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 <br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 try {<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
 validateGrade(grade); // Check if the grade is valid<br>=C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 studentGrades[i] =3D grade;<br>=C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 } catch (gradeexception e) {<br>=C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 System.out.println(&qu=
ot;Invalid grade entered for student &quot; + studentIDs[i] + &quot;. Setti=
ng grade to &#39;I&#39;.&quot;);<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 studentGrades[i] =3D &#39;I&#39;;<br>=C2=A0 =C2=A0 =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 }<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 }<br>=C2=A0 =C2=A0 =
=C2=A0 =C2=A0 <br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 scanner.close();<br>=C2=A0 =
=C2=A0 =C2=A0 =C2=A0 <br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 System.out.println(&qu=
ot;\nStudent IDs and Grades:&quot;);<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 for (in=
t i =3D 0; i &lt; studentIDs.length; i++) {<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 System.out.println(&quot;Student ID: &quot; + studentIDs[i] +=
 &quot;, Grade: &quot; + studentGrades[i]);<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =
}<br>=C2=A0 =C2=A0 }<br><br>=C2=A0 =C2=A0 public static void validateGrade(=
char grade) throws gradeexception {<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 for (cha=
r validGrade : gradeexception.VALID_GRADES) {<br>=C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 if (grade =3D=3D validGrade) {<br>=C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 return; // Grade is valid, no exception<=
br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 }<br>=C2=A0 =C2=A0 =C2=A0 =C2=
=A0 }<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 throw new gradeexception(&quot;Invalid=
 grade: &quot; + grade);<br>=C2=A0 =C2=A0 }<br>}<br>=C2=A0 =C2=A0 <br>=C2=
=A0 =C2=A0=C2=A0<br></div>

--000000000000a92b9506068dad01--